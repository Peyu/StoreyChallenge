// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Storey.DAL;

#nullable disable

namespace Storey.DAL.Migrations
{
    [DbContext(typeof(StoreyContext))]
    partial class StoreyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Storey.DAL.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            Nombre = "Iluminación"
                        },
                        new
                        {
                            CategoriaId = 2,
                            Nombre = "Refrigeración"
                        });
                });

            modelBuilder.Entity("Storey.DAL.Models.CategoriaItem", b =>
                {
                    b.Property<int>("CategoriaItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaItemId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Elemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("CategoriaItemId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Item", (string)null);

                    b.HasData(
                        new
                        {
                            CategoriaItemId = 1,
                            CategoriaId = 1,
                            Elemento = "Lámpara Led de 5w",
                            Valor = 5
                        },
                        new
                        {
                            CategoriaItemId = 2,
                            CategoriaId = 1,
                            Elemento = "Lámpara Led de 10w",
                            Valor = 10
                        },
                        new
                        {
                            CategoriaItemId = 3,
                            CategoriaId = 1,
                            Elemento = "Lámpara Incandescente de 40w",
                            Valor = 40
                        },
                        new
                        {
                            CategoriaItemId = 4,
                            CategoriaId = 1,
                            Elemento = "Lámpara Incandescente de 100w",
                            Valor = 100
                        },
                        new
                        {
                            CategoriaItemId = 5,
                            CategoriaId = 1,
                            Elemento = "Lámpara Incandescente de 400w",
                            Valor = 400
                        },
                        new
                        {
                            CategoriaItemId = 6,
                            CategoriaId = 2,
                            Elemento = "Heladera",
                            Valor = 1000
                        },
                        new
                        {
                            CategoriaItemId = 7,
                            CategoriaId = 2,
                            Elemento = "Freezer",
                            Valor = 1500
                        });
                });

            modelBuilder.Entity("Storey.DAL.Models.CategoriaItem", b =>
                {
                    b.HasOne("Storey.DAL.Models.Categoria", null)
                        .WithMany("Items")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Storey.DAL.Models.Categoria", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
